var n=(e,s,l)=>new Promise((d,c)=>{var r=t=>{try{i(l.next(t))}catch(u){c(u)}},f=t=>{try{i(l.throw(t))}catch(u){c(u)}},i=t=>t.done?d(t.value):Promise.resolve(t.value).then(r,f);i((l=l.apply(e,s)).next())});import{bM as m,bK as F}from"./bootstrap-B4JiwaAL.js";import{u as h}from"./form-BUp9oLlJ.js";import{a_ as y,a4 as A,P as b,J as _,aa as g,ab as C,ac as I,x as D,a7 as v}from"../jse/index-index-DnPbrghU.js";import{b as w}from"./node-hUzDsXOU.js";import{u as M}from"./use-modal-CbDtZeLz.js";function $(e){return n(this,null,function*(){return m.get("/frp/order/list",{params:e})})}function O(e,s){return n(this,null,function*(){return m.put(`/frp/order/${e}`,s)})}function U(e){return n(this,null,function*(){return m.post("/frp/order",e)})}function B(e){return n(this,null,function*(){return m.delete(`/frp/order/${e}`)})}function x(){return[{component:"Input",fieldName:"username",label:"ClientNodeName",rules:"required"},{component:"ApiSelect",fieldName:"nodeId",label:"节点",rules:"required",componentProps:{allowClear:!0,api:w,class:"w-full",labelField:"name",valueField:"id",childrenField:"children"}},{component:"Input",fieldName:"userUuid",label:"用户UUID"},{component:"Input",fieldName:"type",label:"隧道类型"},{component:"Input",fieldName:"port",label:"隧道端口"},{component:"Input",fieldName:"speed",label:"隧道限速"},{component:"RadioGroup",componentProps:{buttonStyle:"solid",options:[{label:"启用",value:1},{label:"禁用",value:0}],optionType:"button"},defaultValue:1,fieldName:"status",label:"状态"}]}function H(){return[{field:"username",title:"ClientNodeName"},{field:"nodeName",title:"节点名称"},{field:"userUuid",title:"用户UUID"},{field:"type",title:"隧道类型"},{field:"port",title:"隧道端口"},{field:"speed",title:"隧道限速"},{field:"status",title:"状态"},{field:"createdAt",title:"创建时间",formatter:({cellValue:e})=>e?y(e).format("YYYY-MM-DD HH:mm:ss"):""},{align:"center",fixed:"right",title:"操作",slots:{default:"action"}}]}const L=A({__name:"form",emits:["success"],setup(e,{emit:s}){const l=s,d=b(),[c,r]=h({schema:x(),showDefaultActions:!1}),f=()=>n(null,null,function*(){const{valid:o}=yield r.validate();if(!o)return;const a=yield r.getValues();p.lock(),(t.value?O(t.value,a):U(a)).then(()=>{l("success"),F.success(`${t.value?"更新":"创建"}成功`),p.close()}).catch(()=>{p.unlock()})}),i=o=>{if(o){const a=p.getData();r.resetForm(),a?(d.value=a,t.value=a.id,r.setValues(a)):t.value=void 0}},t=b(),[u,p]=M({destroyOnClose:!0,onConfirm:f,onOpenChange:i}),N=_(()=>{var o;return(o=d.value)!=null&&o.id?"编辑角色":"创建角色"});return(o,a)=>(C(),g(v(u),{title:N.value},{default:I(()=>[D(v(c))]),_:1},8,["title"]))}});export{L as _,B as d,$ as g,H as u};
