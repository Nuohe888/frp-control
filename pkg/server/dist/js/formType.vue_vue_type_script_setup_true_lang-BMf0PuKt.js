var d=(p,l,s)=>new Promise((r,i)=>{var o=e=>{try{c(s.next(e))}catch(n){i(n)}},m=e=>{try{c(s.throw(e))}catch(n){i(n)}},c=e=>e.done?r(e.value):Promise.resolve(e.value).then(o,m);c((s=s.apply(p,l)).next())});import{u as h}from"./form-BUp9oLlJ.js";import{cc as y,cd as A,bK as C}from"./bootstrap-B4JiwaAL.js";import{a as D}from"./data-BLbCZo9I.js";import{a4 as T,P as f,J as V,aa as b,ab as g,ac as k,x as w,a7 as v}from"../jse/index-index-DnPbrghU.js";import{u as x}from"./use-modal-CbDtZeLz.js";const N=T({__name:"formType",emits:["success"],setup(p,{emit:l}){const s=l,r=f(),[i,o]=h({schema:D(),showDefaultActions:!1}),m=()=>d(null,null,function*(){const{valid:t}=yield o.validate();if(!t)return;const a=yield o.getValues();u.lock(),(e.value?y(e.value,a):A(a)).then(()=>{s("success"),C.success(`${e.value?"更新":"创建"}成功`),u.close()}).catch(()=>{u.unlock()})}),c=t=>{if(t){const a=u.getData();o.resetForm(),a?(r.value=a,e.value=a.id,o.setValues(a)):e.value=void 0}},e=f(),[n,u]=x({destroyOnClose:!0,onConfirm:m,onOpenChange:c}),_=V(()=>{var t;return(t=r.value)!=null&&t.id?"编辑字典类型":"创建字典类型"});return(t,a)=>(g(),b(v(n),{title:_.value},{default:k(()=>[w(v(i))]),_:1},8,["title"]))}});export{N as _};
